name: Check and Build Latest Tor + Lyrebird

on:
  schedule:
    - cron: "0 3 * * *"  # Every day at 03:00 UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get latest Tor and Lyrebird versions
        id: versions
        run: |
          tor_version=$(wget -q -O- 'https://gitlab.torproject.org/tpo/core/tor/-/tags?format=atom' \
            | grep -oP '(?<=<title>tor-)\d+(\.\d+)*' | sort -V -r | head -n1)
          lyrebird_version=$(wget -q -O- 'https://gitlab.torproject.org/tpo/anti-censorship/pluggable-transports/lyrebird/-/tags?format=atom' \
            | grep -oP '(?<=<title>lyrebird-)\d+(\.\d+)*' | sort -V -r | head -n1)

          echo "tor_tag=tor-$tor_version" >> $GITHUB_OUTPUT
          echo "lyrebird_tag=lyrebird-$lyrebird_version" >> $GITHUB_OUTPUT
          echo "version=$tor_version-$lyrebird_version" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and Push if updated
        run: |
          IMAGE=ghcr.io/lanjelin/tor-zero
          VERSION=${{ steps.versions.outputs.version }}

          # Check if tag already exists
          if curl --silent --fail -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://ghcr.io/v2/lanjelin/tor-zero/manifests/$VERSION" > /dev/null; then
            echo "Image already exists for $VERSION. Skipping build."
            exit 0
          fi

          BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

          docker buildx build \
            --label org.opencontainers.image.created="$BUILD_DATE" \
            --build-arg tor_tag=${{ steps.versions.outputs.tor_tag }} \
            --build-arg lyrebird_tag=${{ steps.versions.outputs.lyrebird_tag }} \
            --tag $IMAGE:$VERSION \
            --tag $IMAGE:latest \
            --label org.opencontainers.image.version="$VERSION" \
            --push .

